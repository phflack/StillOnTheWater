using UnityEngine;
using VRTK;
using System.Collections;

public class Interactable_Object_Extension : MonoBehaviour
{
    //https://github.com/thestonefox/VRTK/issues/643
    // this script demonstrates how to detect when this object has been grabbed by a controller.  

    // it requires the object already have the VRTK_InteractableObject attached.  

    // it simpley subscribes to the event generated by the interactable object script.  

    // there are many more events to subscribe to so lots of interaction options are posible. 



    // use this script to ADD functionality to your object not provied by the VRTK scripts.

    // this could include triggering other actions based, etc. 

    // a full list of events can be found in the interactable object script.







    // Use this for initialization

    void Start()

    {



        //make sure the object has the VRTK script attached... 

        if (GetComponent<VRTK_InteractableObject>() == null)

        {

            Debug.LogError("Team3_Interactable_Object_Extension is required to be attached to an Object that has the VRTK_InteractableObject script attached to it");

            return;

        }



        //subscribe to the event.  NOTE: the "ObectGrabbed"  this is the procedure to invoke if this objectis grabbed.. 

        GetComponent<VRTK_InteractableObject>().InteractableObjectGrabbed += new InteractableObjectEventHandler(ObjectGrabbed);
        GetComponent<VRTK_InteractableObject>().InteractableObjectUngrabbed += new InteractableObjectEventHandler(ObjectUnGrabbed);






    }



    //this object has been grabbed.. so do what ever is in the code.. 

    private void ObjectGrabbed(object sender, InteractableObjectEventArgs e)

    {
        // TODO: this whole script is not named according to what it does
        Debug.Log("Im Grabbed");
        GetComponent<SetKinematicOnCollisionWithSurfaces>().CancelDisable();

    }

    //this object has been grabbed.. so do what ever is in the code.. 

    private void ObjectUnGrabbed(object sender, InteractableObjectEventArgs e)

    {
        // TODO: this whole script is not named according to what it does
        Debug.Log("Im UnGrabbed");
        GetComponent<SetKinematicOnCollisionWithSurfaces>().CancelDisable();

    }

}